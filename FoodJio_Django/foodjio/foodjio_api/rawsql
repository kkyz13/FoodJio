SELECT  event_object_table AS table_name ,trigger_name
FROM information_schema.triggers
GROUP BY table_name , trigger_name
ORDER BY table_name ,trigger_name


DROP TRIGGER update_maxnum_trigger ON foodjio_api_meetparticipants;


DROP FUNCTION update_meet_maxnum;


INSERT INTO foodjio_api_cuisinetype (id, name)
VALUES
(1, 'American'),
(2, 'Japanese'),
(3, 'Asian'),
(4, 'Mediterranean'),
(5, 'Muslim'),
(6, 'Korean'),
(7, 'Vietnamese')

DELETE FROM foodjio_api_cuisinetype

INSERT INTO foodjio_api_meet (foodimg, title, address, website, cuisinetype_id, author_id, maxnum)
VALUES ('none', 'TestMeet', '4 Food Court', 'none', '1', '9a077b19-e6f0-4cef-a3d5-9d91555066b6', '2' );



DROP TRIGGER meet_participants_trigger ON foodjio_api_meetparticipants

-- Create the trigger function
CREATE OR REPLACE FUNCTION check_is_full() RETURNS TRIGGER AS $$
DECLARE
  meet_participants_count INTEGER;
BEGIN
  -- Calculate the count of account_id for the given meet_id
  SELECT COUNT(account_id) INTO meet_participants_count
  FROM foodjio_api_meetparticipants
  WHERE meet_id = NEW.meet_id;

  -- Check if the count equals maxnum
  IF meet_participants_count = (SELECT maxnum FROM foodjio_api_meet WHERE id = NEW.meet_id) THEN
    -- Update is_full to True
    UPDATE foodjio_api_meet SET is_full = True WHERE id = NEW.meet_id;
  ELSE
    -- Update is_full to False
    UPDATE foodjio_api_meet SET is_full = False WHERE id = NEW.meet_id;
  END IF;

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create the trigger
CREATE TRIGGER meet_participants_trigger
AFTER INSERT OR UPDATE OR DELETE ON foodjio_api_meetparticipants
FOR EACH ROW
EXECUTE FUNCTION check_is_full();


`````````````````
DROP TRIGGER update_maxnum_trigger ON foodjio_api_meetparticipants;


CREATE OR REPLACE FUNCTION update_meet_maxnum()
RETURNS TRIGGER AS $$
DECLARE
    participant_count integer;
BEGIN
    -- Calculate the number of participants for the meet with the given meet_id
    SELECT COUNT(account_id) INTO participant_count
    FROM foodjio_api_meetparticipants
    WHERE meet_id = NEW.meet_id;

    -- Update the is_full column in the foodjio_api_meet table based on whether the count is equal to maxnum
    IF participant_count = (SELECT maxnum FROM foodjio_api_meet WHERE id = NEW.meet_id) THEN
        UPDATE foodjio_api_meet
        SET is_full = TRUE
        WHERE id = NEW.meet_id;
    ELSIF participant_count < (SELECT maxnum FROM foodjio_api_meet WHERE id = NEW.meet_id) THEN
        UPDATE foodjio_api_meet
        SET is_full = FALSE
        WHERE id = NEW.meet_id;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_maxnum_trigger
AFTER INSERT OR DELETE ON foodjio_api_meetparticipants
FOR EACH ROW
EXECUTE FUNCTION update_meet_maxnum();